@page "/"
@using System.Text.RegularExpressions
@using System.Web
@using SmartBlaze.Frontend.Components.Layout

@rendermode InteractiveServer

@inject ChatSessionStateService _chatSessionStateService
@inject SettingsService _settingsService

<PageTitle>SmartBlaze</PageTitle>

<div id="pageRow">
    @if (_chatSessionStateService.CurrentChatSession is not null)
    {
        <img src="icons/chat-dots-fill.svg" width="20" height="20" alt="chat icon" class="me-2"/>
        <span id="pageTitle">
            @_chatSessionStateService.CurrentChatSession.Title
        </span>
    }
</div>

<div id="conversationContainer">
    @if (_chatSessionStateService.CurrentChatSession is not null 
         && !string.IsNullOrEmpty(_chatSessionStateService.CurrentChatSession.SystemInstruction))
    {
    <div class="d-flex">
        <img src="icons/gear-wide.svg" width="25" height="25" alt="system icon" title="system"/>

        <div class="ps-3 pe-3 pb-5 pt-1">
        <span>
            @((MarkupString)Regex.Replace(HttpUtility.HtmlEncode(@_chatSessionStateService.CurrentChatSession.SystemInstruction),
            "\r?\n|\r", "<br />"))
        </span>
        </div>
    </div>
    }

    @if (_chatSessionStateService.CurrentChatSessionMessages is not null)
    {
    @foreach(var message in _chatSessionStateService.CurrentChatSessionMessages)
    {
        <div class="d-flex">
            <div>
                @switch (message.Role)
                {
                    case "user":
                        <img src="icons/person-fill.svg" width="28" height="28" alt="user icon" title="user"/>
                        break;
                    case "assistant":
                        <img src="icons/robot.svg" width="28" height="28" alt="assistant icon" title="assistant"/>
                        break;
                }
            </div>
            <div class="ps-3 pe-3 pb-5 pt-1">
                <span>
                    @((MarkupString)Regex.Replace(HttpUtility.HtmlEncode(@message.Text ?? ""),
                        "\r?\n|\r", "<br />"))
                </span>
            </div>
        </div>
        
        @if(message.MediaDtos is not null)
        {
            <div class="row row-cols-4 align-items-center justify-content-start mb-5">
            @foreach (var mediaDto in message.MediaDtos)
            {
                @if (mediaDto.Data is not null && mediaDto.Data.StartsWith("http"))
                {
                    <div class="col py-2">
                        <img src="@mediaDto.Data" alt="user image" width="300" class="img-thumbnail"/>
                    </div>
                }
                else
                {
                    <div class="col" py-2>
                        <img src="data:@mediaDto.ContentType;base64, @mediaDto.Data" alt="user image" width="300" class="img-thumbnail"/>
                    </div>
                }
            }
            </div>
        }
    }

    @if (_chatSessionStateService.IsGeneratingResponse)
    {
    <div class="d-flex">
        <div>
            <img src="icons/robot.svg" width="28" height="28" alt="assistant icon" title="assistant"/>
        </div>
        <div class="ps-3 pe-3 pb-5 pt-1">
            <span class="text-secondary">I'm elaborating message...</span>
        </div>
    </div>
    }
    }
</div>

<div>
    <InputBox/>
</div>


@code {
    private bool _applicationStarted = false;
    
    protected override async Task OnInitializedAsync()
    {
        if (!_applicationStarted)
        {
            _applicationStarted = true;
            
            _chatSessionStateService.RefreshView += ReloadComponentState;
            _settingsService.RefreshView += ReloadComponentState;
        }

        await base.OnInitializedAsync();
    }

    private void ReloadComponentState()
    {
        InvokeAsync(StateHasChanged);
    }
}