@using SmartBlaze.Frontend.Models
@using SmartBlaze.Frontend.Services

@rendermode InteractiveServer

@inject NavigationManager navigationManager
@inject ChatStateService chatStateService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand">SmartBlaze</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable h-75" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (_chats is null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link">
                    Loading...
                </NavLink>
            </div>
        }
        else
        {
            @foreach (var chat in _chats)
            {
                <div class="nav-item px-3">
                    
                    <NavLink class="@(chat.Selected ? "nav-link active" : "nav-link")"
                             @onclick="() => OnChatClicked(chat)">
                        <img src="icons/chat-dots-fill.svg" width="20" height="20" alt="chat icon" class="me-2"/>
                        <span class="user-select-none">@chat.Title</span>
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

<div class="border-top border-1 border-white">
    <div class="nav-item px-3">
        <NavLink class="nav-link user-select-none">
            New chat
        </NavLink>
    </div>
    
</div>

@code
{
    private List<Chat>? _chats;
    
    
    protected override async Task OnInitializedAsync()
    {
        if (_chats is null)
        {
            _chats = chatStateService.Chats;
        }
        
        await Task.CompletedTask;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (chatStateService.SelectedChat is null)
            {
                navigationManager.NavigateTo("/welcome");
            }
            else
            {
                navigationManager.NavigateTo($"/");
            }
        }
        
        await Task.CompletedTask;
    }

    private void OnChatClicked(Chat chat)
    {
        chatStateService.SelectChat(chat);
        
        navigationManager.NavigateTo($"/");
    }
}
