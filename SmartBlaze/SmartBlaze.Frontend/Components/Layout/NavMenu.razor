@using SmartBlaze.Frontend.Models

@rendermode InteractiveServer

@inject NavigationManager navigationManager
@inject ChatStateService chatStateService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand">SmartBlaze</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div id="chatList" class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (chatStateService.Chats is null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link">
                    Loading...
                </NavLink>
            </div>
        }
        else
        {
            @foreach (var chat in chatStateService.Chats)
            {
                <div class="nav-item px-3">
                    
                    <NavLink class="@(chat.Selected ? "nav-link active" : "nav-link")"
                             @onclick="() => OnChatClicked(chat)">
                        <img src="icons/chat-dots-fill.svg" width="20" height="20" alt="chat icon" class="me-2"/>
                        <span class="user-select-none">@chat.Title</span>
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

<div class="border-top border-1 border-white">
    <div class="nav-item px-3">
        <NavLink class="nav-link user-select-none"
                 @onclick="() => OnNewChatClicked()">
            <img src="icons/plus-circle-fill.svg" width="20" height="20" alt="new chat icon" class="me-2"/>
            <span>New chat</span>
        </NavLink>
    </div>
    
</div>

@code
{
    protected override async Task OnInitializedAsync()
    {
        chatStateService.OnChange += RefreshView;

        await base.OnInitializedAsync();
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        if (firstRender)
        {
            if (chatStateService.CurrentChatSession is null)
            {
                navigationManager.NavigateTo("/welcome");
            }
            else
            {
                navigationManager.NavigateTo($"/");
            }
        }
        else
        {
            if (navigationManager.Uri.EndsWith("/welcome") 
                && chatStateService.CurrentChatSession is not null)
            {
                navigationManager.NavigateTo($"/");
            }
        }
        
        await base.OnAfterRenderAsync(firstRender);
        
    }
    
    private void RefreshView()
    {
        InvokeAsync(StateHasChanged);
    }

    private async void OnChatClicked(ChatSession chat)
    {
        await chatStateService.SelectChat(chat);
    }

    private void OnNewChatClicked()
    {
        chatStateService.CreateNewChatSession();
    }
    
    
}
