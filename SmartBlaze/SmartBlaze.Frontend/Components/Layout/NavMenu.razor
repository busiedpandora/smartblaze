@using SmartBlaze.Frontend.Dtos
@rendermode InteractiveServer

@inject NavigationManager _navigationManager
@inject ChatStateService _chatStateService
@inject RedirectService _redirectService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand">SmartBlaze</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div id="chatList" class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (_chatStateService.ChatSessions is null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link">
                    Loading chat sessions...
                </NavLink>
            </div>
        }
        else
        {
            @foreach (var chatSession in _chatStateService.ChatSessions)
            {
                <div class="nav-item px-3">
                    
                    <NavLink class="@(chatSession.Selected ? "nav-link active" : "nav-link")"
                             @onclick="() => OnChatClicked(chatSession)">
                        <img src="icons/chat-dots-fill.svg" width="20" height="20" alt="chat icon" class="me-2"/>
                        <span class="user-select-none">@chatSession.Title</span>
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

<div class="border-top border-1 border-white">
    <div class="nav-item px-3">
        <NavLink class="nav-link user-select-none"
                 @onclick="() => OnNewChatClicked()">
            <img src="icons/plus-circle-fill.svg" width="20" height="20" alt="new chat icon" class="me-2"/>
            <span>New chat</span>
        </NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link user-select-none"
                 @onclick="() => OnSettingsClicked()">
            <img src="icons/gear-fill.svg" width="21" height="21" alt="settings icon" class="me-2"/>
            <span>Settings</span>
        </NavLink>
    </div>
    
</div>

@code
{
    protected override async Task OnInitializedAsync()
    {
        _chatStateService.NavigateToErrorPage += UpdateErrorInfo;
        _chatStateService.NavigateToPage += UpdatePageUrl;
        _chatStateService.RefreshView += RefreshView;

        await base.OnInitializedAsync();
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _chatStateService.LoadChats();
        }

        if (!_navigationManager.Uri.EndsWith(_redirectService.Url))
        {
            _navigationManager.NavigateTo(_redirectService.Url);
        }
        
        await base.OnAfterRenderAsync(firstRender);
    }
    
    private void RefreshView()
    {
        InvokeAsync(StateHasChanged);
    }

    private async void OnChatClicked(ChatSessionDto chatSession)
    {
        await _chatStateService.SelectChatSession(chatSession);
    }

    private async void OnNewChatClicked()
    {
        await _chatStateService.CreateNewChatSession();
    }

    private void UpdateErrorInfo(string errorTitle, string errorMessage)
    {
        _redirectService.Url = "/error";
        _redirectService.ErrorTitle = errorTitle;
        _redirectService.ErrorMessage = errorMessage;
    }

    private void UpdatePageUrl(string url)
    {
        _redirectService.Url = url;
    }

    private void OnSettingsClicked()
    {
        
    }
}
